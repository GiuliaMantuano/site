<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title>Codurance</title>
    <link href="/atom.xml" rel="self"/>
    <link href=""/>
    <updated>2016-07-29T12:21:56+00:00</updated>
    <id>http://codurance.com</id>
    <author>
        <name>Codurance</name>
        <email>hello@codurance.com</email>
    </author>
    <rights>Copyright (c) Codurance</rights>
    
    <entry>
        <id>/videos/2016/07/14/shape-your-infrastructure-with-terraform/</id>
        <title>Shape your infrastructure with Terraform</title>
        <link href="http://codurance.com/videos/2016/07/14/shape-your-infrastructure-with-terraform/"/>
        <published>2016-07-14T10:59:00+00:00</published>
        
        <summary type="html">&lt;h2&gt;Shape your infrastructure with Terraform&lt;/h2&gt;

</summary>
        
    </entry>
    
    <entry>
        <id>/2016/07/11/state-in-scalable-architectures/</id>
        <title>State in scalable architectures</title>
        <link href="http://codurance.com/2016/07/11/state-in-scalable-architectures/"/>
        <published>2016-07-11T00:20:00+00:00</published>
        
        <summary type="html">&lt;p&gt;Handling state is one of the cornerstones of software development. Most of business value derived from software relies on state. Depending on the level of abstraction, state, and the approach to handle it, looks like a completely different problem. In this post we&#39;ll see what is common to all of them and how modern scalability needs have pushed towards innovative and refreshing approaches.&lt;/p&gt;

</summary>
        
    </entry>
    
    <entry>
        <id>/craftsmanship/2016/07/04/the-rush-age/</id>
        <title>The Rush Age</title>
        <link href="http://codurance.com/craftsmanship/2016/07/04/the-rush-age/"/>
        <published>2016-07-04T10:00:00+00:00</published>
        
        <summary type="html">&lt;p&gt;We live in the rush age. We are literally overwhelmed by the amount of things we have to do, both at work and outside it. We leave work and have a bunch of emails, Facebook notifications, tweets, text messages (among others), waiting for response. Even worse, we are in bed keeping an eye open looking at our mobile phone in case we get a new notification. &lt;a href=&quot;http://www.nytimes.com/2016/06/12/fashion/internet-technology-phones-introspection.html?_r=0&quot;&gt;This is ridiculous&lt;/a&gt;.&lt;/p&gt;

</summary>
        
    </entry>
    
    <entry>
        <id>/technology/2016/07/03/scaling-umbraco-on-windows-azure-II/</id>
        <title>Scaling Umbraco On Windows Azure Part II</title>
        <link href="http://codurance.com/technology/2016/07/03/scaling-umbraco-on-windows-azure-II/"/>
        <published>2016-07-03T13:02:00+00:00</published>
        
        <summary type="html">&lt;p&gt;In this second post of the three parts series about how to scale an Umbraco website on Windows Azure, we will install the CMS on our cloud platform.&lt;/p&gt;




&lt;h3&gt;A one-click process, maybe a few more clicks&lt;/h3&gt;




&lt;p&gt;If you don&#39;t have one yet, create your &lt;a href=&quot;https://azure.microsoft.com/en-gb/pricing/free-trial/&quot;&gt;Windows Azure Free Trial subscription&lt;/a&gt;, then log into your portal.&lt;/p&gt;




&lt;p&gt;&lt;/p&gt;




&lt;p&gt;&lt;img src=&quot;/assets/img/custom/blog/2016-06-20-umbraco-on-azure/03.png&quot;  alt=&quot;&quot; title=&quot;&quot; class=&quot;img img-center img-responsive style-screengrab&quot;&gt;&lt;/p&gt;




&lt;p&gt;Create a new web site and install Umbraco.&lt;/p&gt;




&lt;p&gt;&lt;/p&gt;




&lt;p&gt;&lt;img src=&quot;/assets/img/custom/blog/2016-06-20-umbraco-on-azure/04.png&quot;  alt=&quot;&quot; title=&quot;&quot; class=&quot;img img-center img-responsive style-screengrab&quot;&gt;&lt;/p&gt;




&lt;p&gt;&lt;/p&gt;




&lt;p&gt;&lt;img src=&quot;/assets/img/custom/blog/2016-06-20-umbraco-on-azure/05.png&quot;  alt=&quot;&quot; title=&quot;&quot; class=&quot;img img-center img-responsive style-screengrab&quot;&gt;&lt;/p&gt;




&lt;p&gt;Make sure you chose the right pricing for the database! For the demo, the free price tier is enough.&lt;/p&gt;




&lt;p&gt;&lt;/p&gt;




&lt;p&gt;&lt;img src=&quot;/assets/img/custom/blog/2016-06-20-umbraco-on-azure/06.png&quot;  alt=&quot;&quot; title=&quot;&quot; class=&quot;img img-center img-responsive style-screengrab&quot;&gt;&lt;/p&gt;




&lt;p&gt;Configure the server.&lt;/p&gt;




&lt;p&gt;&lt;/p&gt;




&lt;p&gt;&lt;img src=&quot;/assets/img/custom/blog/2016-06-20-umbraco-on-azure/07.png&quot;  alt=&quot;&quot; title=&quot;&quot; class=&quot;img img-center img-responsive style-screengrab&quot;&gt;&lt;/p&gt;




&lt;p&gt;Add the  App settings.&lt;/p&gt;




&lt;p&gt;&lt;/p&gt;




&lt;p&gt;&lt;img src=&quot;/assets/img/custom/blog/2016-06-20-umbraco-on-azure/08.png&quot;  alt=&quot;&quot; title=&quot;&quot; class=&quot;img img-center img-responsive style-screengrab&quot;&gt;&lt;/p&gt;




&lt;p&gt;We&#39;re all set up. Click create, your app is being deployed.&lt;/p&gt;




&lt;p&gt;&lt;/p&gt;




&lt;p&gt;&lt;img src=&quot;/assets/img/custom/blog/2016-06-20-umbraco-on-azure/09.png&quot;  alt=&quot;&quot; title=&quot;&quot; class=&quot;img img-center img-responsive style-screengrab&quot;&gt;&lt;/p&gt;




&lt;p&gt;After few minutes the deployment is complete.&lt;/p&gt;




&lt;p&gt;&lt;/p&gt;




&lt;p&gt;&lt;img src=&quot;/assets/img/custom/blog/2016-06-20-umbraco-on-azure/10.png&quot;  alt=&quot;&quot; title=&quot;&quot; class=&quot;img img-center img-responsive style-screengrab&quot;&gt;&lt;/p&gt;




&lt;p&gt;You can find the link to your website on the all resources link on the left hand side menu.&lt;/p&gt;




&lt;p&gt;&lt;/p&gt;




&lt;p&gt;&lt;img src=&quot;/assets/img/custom/blog/2016-06-20-umbraco-on-azure/11.png&quot;  alt=&quot;&quot; title=&quot;&quot; class=&quot;img img-center img-responsive style-screengrab&quot;&gt;&lt;/p&gt;




&lt;p&gt;The default app page will first appear, whilst the umbraco install is launching..
It should eventually prompt you for the login details you want to set up for the very first admin user of your umbraco installation.&lt;/p&gt;




&lt;p&gt;&lt;/p&gt;




&lt;p&gt;&lt;img src=&quot;/assets/img/custom/blog/2016-06-20-umbraco-on-azure/12.png&quot;  alt=&quot;&quot; title=&quot;&quot; class=&quot;img img-center img-responsive style-screengrab&quot;&gt;&lt;/p&gt;




&lt;p&gt;Now is the time for you to grab a coffee and check your &lt;a href=&quot;https://twitter.com/cats?lang=en-gb&quot;&gt;twitter feed&lt;/a&gt;.&lt;/p&gt;




&lt;p&gt;&lt;/p&gt;




&lt;p&gt;&lt;img src=&quot;/assets/img/custom/blog/2016-06-20-umbraco-on-azure/13.png&quot;  alt=&quot;&quot; title=&quot;&quot; class=&quot;img img-center img-responsive style-screengrab&quot;&gt;&lt;/p&gt;




&lt;p&gt;And here we are , ready to manage our website!
After a successful installation, we are taken to the admin page of our Umbraco CMS.&lt;/p&gt;




&lt;p&gt;&lt;/p&gt;




&lt;p&gt;&lt;img src=&quot;/assets/img/custom/blog/2016-06-20-umbraco-on-azure/14.png&quot;  alt=&quot;&quot; title=&quot;&quot; class=&quot;img img-center img-responsive style-screengrab&quot;&gt;&lt;/p&gt;




&lt;h3&gt;Ready to use layout template&lt;/h3&gt;




&lt;p&gt;Since we installed the default template along with the Umbraco install, we have a starter kit, named Fanoe with layout template and site structure already built for us.&lt;/p&gt;




&lt;p&gt;&lt;/p&gt;




&lt;p&gt;&lt;img src=&quot;/assets/img/custom/blog/2016-06-20-umbraco-on-azure/15.png&quot;  alt=&quot;&quot; title=&quot;&quot; class=&quot;img img-center img-responsive style-screengrab&quot;&gt;&lt;/p&gt;




&lt;p&gt;We can study, in the admin of the website accessed via the &lt;code&gt;/umbraco path&lt;/code&gt; , the structure of our website.
We have a Homepage that is our Higher level page, and it contains &lt;code&gt;Learn, Explore and Extend&lt;/code&gt; as children items.
Each of those nodes are documents that are of a specific type and which are linked to a given template.
In our case, the Home document, is an instance of the Home Document Type and will be rendered through the Home Template.&lt;/p&gt;




&lt;p&gt;&lt;/p&gt;




&lt;p&gt;&lt;img src=&quot;/assets/img/custom/blog/2016-06-20-umbraco-on-azure/16.png&quot;  alt=&quot;&quot; title=&quot;&quot; class=&quot;img img-center img-responsive style-screengrab&quot;&gt;&lt;/p&gt;




&lt;p&gt;The Home Document Type (DT) is defined in the settings menu of the Umbraco website.&lt;/p&gt;




&lt;p&gt;&lt;/p&gt;




&lt;p&gt;&lt;img src=&quot;/assets/img/custom/blog/2016-06-20-umbraco-on-azure/17.png&quot;  alt=&quot;&quot; title=&quot;&quot; class=&quot;img img-center img-responsive style-screengrab&quot;&gt;&lt;/p&gt;




&lt;p&gt;The Home DT has two tabs defined, in the site tab we have a Site Description property of type Textarea, a Site Title property of type Textstring.&lt;/p&gt;




&lt;p&gt;The Home Template, is accessible under the Template folder of the Umbraco Settings menu.
It is nested under a master Template called &lt;code&gt;Master&lt;/code&gt; and it contains the code to display when the Home page is rendered.&lt;/p&gt;




&lt;p&gt;&lt;/p&gt;




&lt;p&gt;&lt;img src=&quot;/assets/img/custom/blog/2016-06-20-umbraco-on-azure/18.png&quot;  alt=&quot;&quot; title=&quot;&quot; class=&quot;img img-center img-responsive style-screengrab&quot;&gt;&lt;/p&gt;




&lt;p&gt;Here the home page references a child template to display content from Grid data types.&lt;/p&gt;




&lt;p&gt;&lt;/p&gt;




&lt;p&gt;&lt;img src=&quot;/assets/img/custom/blog/2016-06-20-umbraco-on-azure/19.png&quot;  alt=&quot;&quot; title=&quot;&quot; class=&quot;img img-center img-responsive style-screengrab&quot;&gt;&lt;/p&gt;




&lt;h3&gt;Up and running in less than an hour : start adding pages&lt;/h3&gt;




&lt;p&gt;We have installed our Umbrao website and we are now familiar enough with how it works to be able to start adding content.
In the next part of this series, we will see how to scale our application on Windows Azure.&lt;/p&gt;

</summary>
        
    </entry>
    
    <entry>
        <id>/technologies/2016/06/24/scaling-umbraco-on-windows-azure/</id>
        <title>Scaling an Umbraco Website On Windows Azure</title>
        <link href="http://codurance.com/technologies/2016/06/24/scaling-umbraco-on-windows-azure/"/>
        <published>2016-06-24T16:20:00+00:00</published>
        
        <summary type="html">&lt;p&gt;This is the first post of a three parts series about how to scale an Umbraco website on Windows Azure platform.&lt;/p&gt;




&lt;h3&gt;Part I: Yet another &lt;a href=&quot;https://umbraco.com/&quot;&gt;CMS&lt;/a&gt;&lt;/h3&gt;




&lt;p&gt;Umbraco is “The friendliest open source MVC .Net framework community”, according to &lt;a href=&quot;https://our.umbraco.org/&quot;&gt;the Umbraco team&lt;/a&gt;.&lt;/p&gt;




&lt;p&gt;This &lt;a href=&quot;https://github.com/umbraco/Umbraco-CMS&quot;&gt;open source content management system&lt;/a&gt; is built on the .Net MVC infrastructure, it allows developers to work on the business logic with Content and Media API, whilst front-end developers can focus on the rendering, look and feel of the website building views with &lt;a href=&quot;http://www.w3schools.com/aspnet/webpages_razor.asp&quot;&gt;Razor markup&lt;/a&gt; and custom CSS.
Looking for an architecture representation of the Umbraco CMS, I have luckily found this diagram &lt;a href=&quot;https://twitter.com/paulsterling/status/357223564019118080&quot;&gt;tweeted&lt;/a&gt; by Paul Sterling.&lt;/p&gt;




&lt;p&gt;&lt;/p&gt;




&lt;p&gt;&lt;img src=&quot;/assets/img/custom/blog/2016-06-20-umbraco-on-azure/01.png&quot;  alt=&quot;&quot; title=&quot;&quot; class=&quot;img img-center img-responsive style-screengrab&quot;&gt;&lt;/p&gt;




&lt;h3&gt;Modular and flexible, but not as blogger friendly as WordPress&lt;/h3&gt;




&lt;p&gt;It is very easy with Umbraco to build simple websites with custom objects and link them together, without writing any line of code. One can spin document types and add child document types in minutes.
Here is a simple diagram from @mcDark &lt;a href=&quot;http://www.theoutfield.co.uk/blog/2011/04/anatomy-of-an-umbraco-document&quot;&gt;blog post&lt;/a&gt; that explains how document types are structured.&lt;/p&gt;




&lt;p&gt;&lt;/p&gt;




&lt;p&gt;&lt;img src=&quot;/assets/img/custom/blog/2016-06-20-umbraco-on-azure/02.png&quot;  alt=&quot;&quot; title=&quot;&quot; class=&quot;img img-center img-responsive style-screengrab&quot;&gt;&lt;/p&gt;




&lt;p&gt;A Document Type in Umbraco is a concept that holds business logic, it is where one configure the properties one will need to store data. It can have a UI representation that is called a Template.
A Template is where the layout of how the data is displayed will be specified using HTML, Razor and CSS.
Blogging is not out of the box in Umbraco. There are however plugins that are called packages, to add blog functionality to Umbraco.
&lt;a href=&quot;https://our.umbraco.org/projects/starter-kits/articulate&quot;&gt;Articulate&lt;/a&gt; is the default blog package that comes installed with the starter kit.
It gives a good basic features sets to get starting blogging, however it does not provide some fundamental blog capabilities such as categories which need to be implemented using document types and require some workaround in the template.&lt;/p&gt;




&lt;h3&gt;Powerful indexing and built-in search capability&lt;/h3&gt;




&lt;p&gt;Umbraco integrates &lt;a href=&quot;https://github.com/Shazwazza/Examine&quot;&gt;Examine&lt;/a&gt;, an indexing and search engine with two indexes already set up for internal search, helping you find your content on the admin of the website.
To improve usability of your website and help your visitors find your content, you can &lt;a href=&quot;https://our.umbraco.org/documentation/reference/searching/examine/quick-start&quot;&gt;build your own indexes&lt;/a&gt; and search functionality.&lt;/p&gt;




&lt;p&gt;In this part we have been introduced to Umbraco, next we will see how easy it is to install and get up and running hosting our website on Windows Azure.&lt;/p&gt;

</summary>
        
    </entry>
    
    <entry>
        <id>/software-craftsmanship/2016/06/22/Single-Responsibility-Principle/</id>
        <title>Some Thoughts on the Single Responsibility Principle</title>
        <link href="http://codurance.com/software-craftsmanship/2016/06/22/Single-Responsibility-Principle/"/>
        <published>2016-06-22T10:00:00+00:00</published>
        
        <summary type="html">&lt;p&gt;&lt;a href=&quot;http://bit.ly/1Da1b16&quot;&gt;SOLID&lt;/a&gt; (single responsibility, open-closed, Liskov substitution, interface segregation and dependency inversion) is a set of principles popularised by &lt;a href=&quot;https://en.wikipedia.org/wiki/Robert_Cecil_Martin&quot;&gt;‘Uncle’ Bob Martin&lt;/a&gt; that aim to guide developers in implementing good software design. The principles define how Object Oriented classes should relate to each other in order to create a codebase that is flexible and able to accommodate ongoing change.&lt;/p&gt;

</summary>
        
    </entry>
    
    <entry>
        <id>/software-craftsmanship/2016/06/17/thinking-in-abstractions/</id>
        <title>Thinking in Abstractions</title>
        <link href="http://codurance.com/software-craftsmanship/2016/06/17/thinking-in-abstractions/"/>
        <published>2016-06-17T00:20:00+00:00</published>
        
        <summary type="html">&lt;p&gt;Recent issues of the &lt;a href=&quot;http://www.clojuregazette.com/archive.html&quot;&gt;Clojure Gazette&lt;/a&gt; have been discussing abstractions, and it&#39;s got me thinking.&lt;/p&gt;

</summary>
        
    </entry>
    
    <entry>
        <id>/practices/extreme-programming/2016/06/14/mastering-TDD/</id>
        <title>Mastering TDD</title>
        <link href="http://codurance.com/practices/extreme-programming/2016/06/14/mastering-TDD/"/>
        <published>2016-06-14T12:10:00+00:00</published>
        
        <summary type="html">&lt;p&gt;Two weeks ago I went to &lt;a href=&quot;https://twitter.com/paulstringer&quot;&gt;Paul Stringer&#39;s&lt;/a&gt; course &lt;a href=&quot;https://skillsmatter.com/courses/545-paul-stringer-s-mastering-tdd-bdd-for-ios&quot;&gt;&quot;Mastering TDD/BDD in iOS&quot;&lt;/a&gt;. After the two days, I was exhausted... During the course, we looked at all the theory, completed some exercises. Paul gave us lots of links and books to read and, quite frankly, I was feeling overwhelmed.
I saw myself in front of the computer, with all those links to follow and read, and I didn&#39;t know what to do... So I laid back on my chair and closed my eyes and thought... What do I know about TDD?&lt;/p&gt;

</summary>
        
    </entry>
    
    <entry>
        <id>/2016/06/09/configuring-aws-for-lambda/</id>
        <title>Configuring Amazon Web Services (AWS) for using Lambda</title>
        <link href="http://codurance.com/2016/06/09/configuring-aws-for-lambda/"/>
        <published>2016-06-09T15:07:00+00:00</published>
        
        <summary type="html">&lt;p&gt;During the  &lt;a href=&quot;http://socratesuk.org/index.html&quot;&gt;Software Craftsmanship and Testing conference UK&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/mashooq&quot;&gt;Mash&lt;/a&gt; run a session on &lt;a href=&quot;https://aws.amazon.com/lambda/details/&quot;&gt;AWS Lambda&lt;/a&gt;, with examples written in Java and python. Some other people also tried to do it in NodeJS. This session is &lt;a href=&quot;/2016/05/11/aws-lambdas&quot;&gt;here&lt;/a&gt;&lt;/p&gt;

</summary>
        
    </entry>
    
    <entry>
        <id>/software-craftsmanship/2016/06/07/why-socrates-uk-is-not-just-a-conference-for-software-craftsmen/</id>
        <title>Why SoCraTes UK is not just a conference for Software Craftsmen.</title>
        <link href="http://codurance.com/software-craftsmanship/2016/06/07/why-socrates-uk-is-not-just-a-conference-for-software-craftsmen/"/>
        <published>2016-06-07T15:20:00+00:00</published>
        
        <summary type="html">&lt;p&gt;Last Friday, I attended the international &lt;a href=&quot;http://socratesuk.org/index.html&quot;&gt;Software Craftsmanship and Testing conference&lt;/a&gt; at the enchanting Wotton House, in Dorking. I was the only Designer among about 100 Developers.&lt;/p&gt;

</summary>
        
    </entry>
    
    <entry>
        <id>/software-creation/2016/05/31/unit-vs-integration-akka-testing/</id>
        <title>Unit vs Integration Akka Testing</title>
        <link href="http://codurance.com/software-creation/2016/05/31/unit-vs-integration-akka-testing/"/>
        <published>2016-05-31T00:20:00+00:00</published>
        
        <summary type="html">&lt;p&gt;This is the sixth post in the series about integrating sync clients with async systems (&lt;a href=&quot;http://codurance.com/2016/04/28/async-systems-with-sync-clients/&quot;&gt;1, &lt;/a&gt;&lt;a href=&quot;http://codurance.com/2016/04/30/akka-basics/&quot;&gt;2, &lt;/a&gt;&lt;a href=&quot;http://codurance.com/2016/05/10/finite-state-machines-with-akka/&quot;&gt;3, &lt;/a&gt;&lt;a href=&quot;http://codurance.com/2016/05/16/publish-subscribe-model-in-kafka/&quot;&gt;4, &lt;/a&gt;&lt;a href=&quot;http://codurance.com/2016/05/16/coordination-in-akka/&quot;&gt;5&lt;/a&gt;). Here we&#39;ll see how to test &lt;a href=&quot;http://doc.akka.io/docs/akka/current/scala/actors.html&quot;&gt;Akka actors&lt;/a&gt; with different testing styles.&lt;/p&gt;

</summary>
        
    </entry>
    
    <entry>
        <id>/2016/05/25/coordination-in-akka/</id>
        <title>Coordination in Akka</title>
        <link href="http://codurance.com/2016/05/25/coordination-in-akka/"/>
        <published>2016-05-25T00:20:00+00:00</published>
        
        <summary type="html">&lt;p&gt;This is the fifth post in the series about integrating sync clients with async systems (&lt;a href=&quot;http://codurance.com/2016/04/28/async-systems-with-sync-clients/&quot;&gt;1, &lt;/a&gt;&lt;a href=&quot;http://codurance.com/2016/04/30/akka-basics/&quot;&gt;2, &lt;/a&gt;&lt;a href=&quot;http://codurance.com/2016/05/10/finite-state-machines-with-akka/&quot;&gt;3, &lt;/a&gt;&lt;a href=&quot;http://codurance.com/2016/05/16/publish-subscribe-model-in-kafka/&quot;&gt;4&lt;/a&gt;). Here we&#39;ll see how to manage the actor&#39;s lifecycle, so our service can use the available resources efficiently.&lt;/p&gt;

</summary>
        
    </entry>
    
    <entry>
        <id>/2016/05/25/aws-api-gateway/</id>
        <title>AWS Lambda with API Gateway</title>
        <link href="http://codurance.com/2016/05/25/aws-api-gateway/"/>
        <published>2016-05-25T00:20:00+00:00</published>
        
        <summary type="html">&lt;p&gt;In a &lt;a href=&quot;/2016/05/11/aws-lambdas&quot;&gt;previous post&lt;/a&gt; I showed you how to create and deploy an AWS Lambda. We will continue that work and look at updating just the code for that lambda. We will also add a REST endpoint to the AWS Lambda using &lt;a href=&quot;https://aws.amazon.com/api-gateway&quot;&gt;AWS API Gateway&lt;/a&gt;.&lt;/p&gt;

</summary>
        
    </entry>
    
    <entry>
        <id>/2016/05/25/a-simple-TDD-environment-in-haskell/</id>
        <title>A simple TDD environment in Haskell</title>
        <link href="http://codurance.com/2016/05/25/a-simple-TDD-environment-in-haskell/"/>
        <published>2016-05-25T00:01:00+00:00</published>
        
        <summary type="html">&lt;p&gt;I recently implemented the &lt;a href=&quot;https://github.com/Gryff/bowling-kata&quot;&gt;bowling kata in Haskell&lt;/a&gt;. In the process, I found out how set up my environment to comfortably do Test Driven Development. Hopefully, others might find this post helpful to begin their journey with the language. I used the following components:&lt;/p&gt;

</summary>
        
    </entry>
    
    <entry>
        <id>/2016/05/16/publish-subscribe-model-in-kafka/</id>
        <title>Publish-subscribe model in Kafka</title>
        <link href="http://codurance.com/2016/05/16/publish-subscribe-model-in-kafka/"/>
        <published>2016-05-16T00:20:00+00:00</published>
        
        <summary type="html">&lt;p&gt;This is the fourth post in the series about integrating sync clients with async systems (&lt;a href=&quot;http://codurance.com/2016/04/28/async-systems-with-sync-clients/&quot;&gt;1, &lt;/a&gt;&lt;a href=&quot;http://codurance.com/2016/04/30/akka-basics/&quot;&gt;2, &lt;/a&gt;&lt;a href=&quot;http://codurance.com/2016/05/10/finite-state-machines-with-akka/&quot;&gt;3&lt;/a&gt;). Here we&#39;ll try to understand how &lt;a href=&quot;http://kafka.apache.org/&quot;&gt;Kafka&lt;/a&gt; works in order to correctly leverage its publish-subscribe implementation.&lt;/p&gt;

</summary>
        
    </entry>
    
</feed>
