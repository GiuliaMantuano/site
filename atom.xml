<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title>Codurance</title>
    <link href="/atom.xml" rel="self"/>
    <link href=""/>
    <updated>2016-01-15T21:27:07+00:00</updated>
    <id>http://codurance.com</id>
    <author>
        <name>Codurance</name>
        <email>hello@codurance.com</email>
    </author>
    <rights>Copyright (c) Codurance</rights>
    
    <entry>
        <id>/2016/01/15/GitHubAnimator/</id>
        <title>GitHubAnimator</title>
        <link href="http://codurance.com/2016/01/15/GitHubAnimator/"/>
        <published>2016-01-15T00:20:00+00:00</published>
        
        <summary type="html">&lt;h3&gt;The Beginning&lt;/h3&gt;




&lt;p&gt;Inspired by my friend &lt;a href=&quot;https://twitter.com/SamirTalwar&quot;&gt;@SamirTalwar&lt;/a&gt; and the initiative he set upon himself to &lt;a href=&quot;http://monospacedmonologues.com/post/136667358499/automating-the-world&quot;&gt;automate the world&lt;/a&gt; I picked up on an idea I had many months ago. Automating the generation of presentations using GitHub commits.&lt;/p&gt;

</summary>
        
    </entry>
    
    <entry>
        <id>/2016/01/10/clojure-vim-environment/</id>
        <title>Clojure VIM Environment</title>
        <link href="http://codurance.com/2016/01/10/clojure-vim-environment/"/>
        <published>2016-01-10T00:20:00+00:00</published>
        
        <summary type="html">&lt;p&gt;The &lt;a href=&quot;https://cursive-ide.com/&quot;&gt;Cursive&lt;/a&gt; plugin for Clojure is now out of its beta testing phase. I have been using it throughout its beta program and, I must say, it is pretty good. Sure, the refactoring capabilities are not quite on a par with those of IntelliJ for Java, but then Clojure is dynamic and asking for that kind of power is asking for the impossible.&lt;/p&gt;

</summary>
        
    </entry>
    
    <entry>
        <id>/2015/12/13/testing-multithreaded-code-in-java/</id>
        <title>Testing multithreaded code in Java</title>
        <link href="http://codurance.com/2015/12/13/testing-multithreaded-code-in-java/"/>
        <published>2015-12-13T00:20:00+00:00</published>
        
        <summary type="html">&lt;p&gt;Testing multithreaded code is a tough challenge. The first advice that you get when trying to test concurrency is to isolate your concurrent concerns in the code as much as possible. This a general design advice but in this case it&#39;s even more important. Make sure to first properly unit test the logic that is wrapped by the concurrent construct. Otherwise you might spend a long time trying to figure out a concurrency problem that turns out to be flawed business logic in the end.&lt;/p&gt;

</summary>
        
    </entry>
    
    <entry>
        <id>/2015/11/25/mouseless-programming/</id>
        <title>Mouseless Programming</title>
        <link href="http://codurance.com/2015/11/25/mouseless-programming/"/>
        <published>2015-11-25T17:00:00+00:00</published>
        
        <summary type="html">&lt;p&gt;To be honest, I used to be quite a power mouse user. Looking back and trying to figure out why I got addicted, it probably happened when Microsoft released Word 6.0 with its twenty-some toolbars with thirty-some buttons in each toolbar. I didn&#39;t remember many shortcuts, except &lt;code&gt;ctrl+c&lt;/code&gt;, &lt;code&gt;ctrl+v&lt;/code&gt;, and &lt;code&gt;ctrl+s&lt;/code&gt;, which I did learn and instantly became a full-stack Word guru in the eyes of toolbar-only users.&lt;/p&gt;

</summary>
        
    </entry>
    
    <entry>
        <id>/2015/11/25/Property-based-testing-FsCheck-Resharper-NCrunch-Visual-Studio-2013/</id>
        <title>Property based testing</title>
        <link href="http://codurance.com/2015/11/25/Property-based-testing-FsCheck-Resharper-NCrunch-Visual-Studio-2013/"/>
        <published>2015-11-25T09:00:00+00:00</published>
        
        <summary type="html">&lt;h3&gt;Background&lt;/h3&gt;




&lt;p&gt;Craftsmanship in software strives for high, predictable, repeatable and affordable quality. This is the reason why we care about design, code reviews and of course testing.
Test Driven Development helps us create a flexible implementation that meets the expectations of our clients in terms of features, performance and quality. As professionals we have to master as many tools as possible to reach our goal of steadily providing value.&lt;/p&gt;




&lt;h3&gt;Property based testing&lt;/h3&gt;




&lt;p&gt;The above is the reason why I am exploring Property Based Testing. I like to think about it as &lt;em&gt;&quot;Let the machine do the heavy lifting for you&quot;&lt;/em&gt; or as &lt;a href=&quot;http://vimeo.com/68383317&quot;&gt;John Huges&lt;/a&gt; says &lt;em&gt;&quot;Don&#39;t write tests, generate them&quot;&lt;/em&gt;.&lt;/p&gt;

</summary>
        
    </entry>
    
    <entry>
        <id>/2015/11/22/changing-scalatra-and-sbt-directories/</id>
        <title>Changing Scalatra and sbt default directories</title>
        <link href="http://codurance.com/2015/11/22/changing-scalatra-and-sbt-directories/"/>
        <published>2015-11-22T23:54:00+00:00</published>
        
        <summary type="html">&lt;p&gt;Conventions are not always good. I recently started a new internal web project
at Codurance and I decided to use Scala. As I&#39;m not a fan of big
frameworks, I chose &lt;a href=&quot;http://www.scalatra.org/&quot;&gt;Scalatra&lt;/a&gt; as a micro web framework.&lt;/p&gt;

</summary>
        
    </entry>
    
    <entry>
        <id>/2015/11/22/my-first-couple-of-months-at-codurance/</id>
        <title>My first couple of months at Codurance</title>
        <link href="http://codurance.com/2015/11/22/my-first-couple-of-months-at-codurance/"/>
        <published>2015-11-22T09:00:00+00:00</published>
        
        <summary type="html">&lt;h3&gt;Some background&lt;/h3&gt;

</summary>
        
    </entry>
    
    <entry>
        <id>/2015/11/19/configuring-an-enterprise-app-sucks/</id>
        <title>Configuring an enterprise app sucks</title>
        <link href="http://codurance.com/2015/11/19/configuring-an-enterprise-app-sucks/"/>
        <published>2015-11-19T09:00:00+00:00</published>
        
        <summary type="html">&lt;p&gt;There has been quite a lot of discussion over the last years about how configuration should be managed as code, be it software settings or infrastructure configuration:&lt;/p&gt;

</summary>
        
    </entry>
    
    <entry>
        <id>/2015/11/16/tips-for-a-friendly-open-source-experience/</id>
        <title>Tips for a friendly open source experience</title>
        <link href="http://codurance.com/2015/11/16/tips-for-a-friendly-open-source-experience/"/>
        <published>2015-11-16T00:20:00+00:00</published>
        
        <summary type="html">&lt;p&gt;Open source has moved from being an important actor in software development to being central for plenty of people, especially thanks to &lt;a href=&quot;https://github.com&quot;&gt;Github&lt;/a&gt;. Most of us are simple users of OSS (Open-source software) but being brave and taking a step forward and becoming a contributor, or even an owner, could help you massively in different ways:&lt;/p&gt;

</summary>
        
    </entry>
    
    <entry>
        <id>/2015/11/02/time-to-go/</id>
        <title>Time To Go</title>
        <link href="http://codurance.com/2015/11/02/time-to-go/"/>
        <published>2015-11-02T09:00:00+00:00</published>
        
        <summary type="html">&lt;p&gt;I&#39;m writing that blog post I never thought I&#39;d write.&lt;/p&gt;

</summary>
        
    </entry>
    
    <entry>
        <id>/2015/11/01/practicing-well-crafted-design/</id>
        <title>Practicing Well-Crafted Design</title>
        <link href="http://codurance.com/2015/11/01/practicing-well-crafted-design/"/>
        <published>2015-11-01T18:20:00+00:00</published>
        
        <summary type="html">&lt;p&gt;Katas are great, but not enough. In the past year Iâ€™ve been trying to find ways to teach our craftsmen and apprentices how to design software. Although we could discuss good design principles, it was very difficult to find a way to practice them. Katas are great for learning TDD, micro design, working in baby steps, and a few techniques for dealing with legacy code but we need more. We would like to practice requirements gathering, domain modelling, and well-crafted code all together, with the same fast feedback loop we get when we do katas. The problem is that we need a far bigger problem with overlapping rules so that we can experience incremental software design. Inspired by a session we had a &lt;a href=&quot;https://www.socrates-conference.de/&quot;&gt;SoCraTes Germany 2015&lt;/a&gt;, we are evolving a deliberate practice session that allows us to achieve that.&lt;/p&gt;

</summary>
        
    </entry>
    
    <entry>
        <id>/2015/10/26/Talk-to-the-business/</id>
        <title>Talk to the business</title>
        <link href="http://codurance.com/2015/10/26/Talk-to-the-business/"/>
        <published>2015-10-26T09:35:00+00:00</published>
        
        <summary type="html">&lt;p&gt;Almost a month ago, I did this amazing course at &lt;a href=&quot;https://skillsmatter.com/&quot;&gt;SkillsMatter&lt;/a&gt;: &lt;a href=&quot;https://skillsmatter.com/courses/202-domain-model&quot;&gt;&quot;Eric Evans Domain Driven Design Immersion Workshop&quot;&lt;/a&gt;. The course was very intensive and provided me with the opportunity to reinforce a lot of concepts I already knew as well as learn a few more.&lt;/p&gt;

</summary>
        
    </entry>
    
    <entry>
        <id>/2015/10/22/transcending-rest-and-rpc/</id>
        <title>Transcending REST and RPC</title>
        <link href="http://codurance.com/2015/10/22/transcending-rest-and-rpc/"/>
        <published>2015-10-22T00:20:00+00:00</published>
        
        <summary type="html">&lt;p&gt;It seems that a new paradigm is coming. Facebook and Netflix have come up with different implementations for that idea. Some people are calling it &lt;a href=&quot;http://www.infoq.com/presentations/domain-driven-architecture&quot;&gt;Demand-Driven Architecture&lt;/a&gt;, but before I show you some solutions, let&#39;s go over some history to understand the problem. I will use the example that Netflix provides, but I think that most of us will find the patterns familiar.&lt;/p&gt;

</summary>
        
    </entry>
    
    <entry>
        <id>/2015/09/29/codereview/</id>
        <title>Code review: Why are we doing it?</title>
        <link href="http://codurance.com/2015/09/29/codereview/"/>
        <published>2015-09-29T00:20:00+00:00</published>
        
        <summary type="html">&lt;p&gt;Developers across many organisations adopted code reviews as one of their core practices. Although that sounds like a very reasonable thing to do, over time the goal that led to the adoption of the practice is forgotten and the only thing left is the mindless application of the practice itself.&lt;/p&gt;

</summary>
        
    </entry>
    
    <entry>
        <id>/2015/09/14/clojure-schemas-are-swagger/</id>
        <title>Clojure (Prismatic) Schemas are Swagger</title>
        <link href="http://codurance.com/2015/09/14/clojure-schemas-are-swagger/"/>
        <published>2015-09-14T12:00:00+00:00</published>
        
        <summary type="html">&lt;p&gt;Recently, I decided to include Swagger documentation to our time sheet application. Although Swagger provides tools to help clients integrate with your REST API the most powerful feature, in my opinion, is that it acts as &quot;living documentation&quot; for the API. Adding Swagger to my the application had a couple of pleasant side-effects:&lt;/p&gt;

</summary>
        
    </entry>
    
</feed>
