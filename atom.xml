<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title>Codurance</title>
    <link href="/atom.xml" rel="self"/>
    <link href=""/>
    <updated>2016-07-01T15:20:02+00:00</updated>
    <id>http://codurance.com</id>
    <author>
        <name>Codurance</name>
        <email>hello@codurance.com</email>
    </author>
    <rights>Copyright (c) Codurance</rights>
    
    <entry>
        <id>/technologies/2016/06/24/scaling-umbraco-on-windows-azure/</id>
        <title>Scaling an Umbraco Website On Windows Azure</title>
        <link href="http://codurance.com/technologies/2016/06/24/scaling-umbraco-on-windows-azure/"/>
        <published>2016-06-24T16:20:00+00:00</published>
        
        <summary type="html">&lt;p&gt;This is the first post of a three parts series about how to scale an Umbraco website on Windows Azure platform.&lt;/p&gt;




&lt;h3&gt;Part I: Yet another &lt;a href=&quot;https://umbraco.com/&quot;&gt;CMS&lt;/a&gt;&lt;/h3&gt;




&lt;p&gt;Umbraco is “The friendliest open source MVC .Net framework community”, according to &lt;a href=&quot;https://our.umbraco.org/&quot;&gt;the Umbraco team&lt;/a&gt;.&lt;/p&gt;




&lt;p&gt;This &lt;a href=&quot;https://github.com/umbraco/Umbraco-CMS&quot;&gt;open source content management system&lt;/a&gt; is built on the .Net MVC infrastructure, it allows developers to work on the business logic with Content and Media API, whilst front-end developers can focus on the rendering, look and feel of the website building views with &lt;a href=&quot;http://www.w3schools.com/aspnet/webpages_razor.asp&quot;&gt;Razor markup&lt;/a&gt; and custom CSS.
Looking for an architecture representation of the Umbraco CMS, I have luckily found this diagram &lt;a href=&quot;https://twitter.com/paulsterling/status/357223564019118080&quot;&gt;tweeted&lt;/a&gt; by Paul Sterling.&lt;/p&gt;




&lt;p&gt;&lt;/p&gt;




&lt;p&gt;&lt;img src=&quot;/assets/img/custom/blog/2016-06-20-umbraco-on-azure/01.png&quot;  alt=&quot;&quot; title=&quot;&quot; class=&quot;img img-center img-responsive style-screengrab&quot;&gt;&lt;/p&gt;




&lt;h3&gt;Modular and flexible, but not as blogger friendly as WordPress&lt;/h3&gt;




&lt;p&gt;It is very easy with Umbraco to build simple websites with custom objects and link them together, without writing any line of code. One can spin document types and add child document types in minutes.
Here is a simple diagram from @mcDark &lt;a href=&quot;http://www.theoutfield.co.uk/blog/2011/04/anatomy-of-an-umbraco-document&quot;&gt;blog post&lt;/a&gt; that explains how document types are structured.&lt;/p&gt;




&lt;p&gt;&lt;/p&gt;




&lt;p&gt;&lt;img src=&quot;/assets/img/custom/blog/2016-06-20-umbraco-on-azure/02.png&quot;  alt=&quot;&quot; title=&quot;&quot; class=&quot;img img-center img-responsive style-screengrab&quot;&gt;&lt;/p&gt;




&lt;p&gt;A Document Type in Umbraco is a concept that holds business logic, it is where one configure the properties one will need to store data. It can have a UI representation that is called a Template.
A Template is where the layout of how the data is displayed will be specified using HTML, Razor and CSS.
Blogging is not out of the box in Umbraco. There are however plugins that are called packages, to add blog functionality to Umbraco.
&lt;a href=&quot;https://our.umbraco.org/projects/starter-kits/articulate&quot;&gt;Articulate&lt;/a&gt; is the default blog package that comes installed with the starter kit.
It gives a good basic features sets to get starting blogging, however it does not provide some fundamental blog capabilities such as categories which need to be implemented using document types and require some workaround in the template.&lt;/p&gt;




&lt;h3&gt;Powerful indexing and built-in search capability&lt;/h3&gt;




&lt;p&gt;Umbraco integrates &lt;a href=&quot;https://github.com/Shazwazza/Examine&quot;&gt;Examine&lt;/a&gt;, an indexing and search engine with two indexes already set up for internal search, helping you find your content on the admin of the website.
To improve usability of your website and help your visitors find your content, you can &lt;a href=&quot;https://our.umbraco.org/documentation/reference/searching/examine/quick-start&quot;&gt;build your own indexes&lt;/a&gt; and search functionality.&lt;/p&gt;




&lt;p&gt;In this part we have been introduced to Umbraco, next we will see how easy it is to install and get up and running hosting our website on Windows Azure.&lt;/p&gt;

</summary>
        
    </entry>
    
    <entry>
        <id>/software-crafstmanship/2016/06/22/Single-Responsibility-Principle/</id>
        <title>Some Thoughts on the Single Responsibility Principle</title>
        <link href="http://codurance.com/software-crafstmanship/2016/06/22/Single-Responsibility-Principle/"/>
        <published>2016-06-22T10:00:00+00:00</published>
        
        <summary type="html">&lt;p&gt;&lt;a href=&quot;http://bit.ly/1Da1b16&quot;&gt;SOLID&lt;/a&gt; (single responsibility, open-closed, Liskov substitution, interface segregation and dependency inversion) is a set of principles popularised by &lt;a href=&quot;https://en.wikipedia.org/wiki/Robert_Cecil_Martin&quot;&gt;‘Uncle’ Bob Martin&lt;/a&gt; that aim to guide developers in implementing good software design. The principles define how Object Oriented classes should relate to each other in order to create a codebase that is flexible and able to accommodate ongoing change.&lt;/p&gt;

</summary>
        
    </entry>
    
    <entry>
        <id>/software-craftsmanship/2016/06/17/thinking-in-abstractions/</id>
        <title>Thinking in Abstractions</title>
        <link href="http://codurance.com/software-craftsmanship/2016/06/17/thinking-in-abstractions/"/>
        <published>2016-06-17T00:20:00+00:00</published>
        
        <summary type="html">&lt;p&gt;Recent issues of the &lt;a href=&quot;http://www.clojuregazette.com/archive.html&quot;&gt;Clojure Gazette&lt;/a&gt; have been discussing abstractions, and it&#39;s got me thinking.&lt;/p&gt;

</summary>
        
    </entry>
    
    <entry>
        <id>/practices/extreme-programming/2016/06/14/mastering-TDD/</id>
        <title>Mastering TDD</title>
        <link href="http://codurance.com/practices/extreme-programming/2016/06/14/mastering-TDD/"/>
        <published>2016-06-14T12:10:00+00:00</published>
        
        <summary type="html">&lt;p&gt;Two weeks ago I went to &lt;a href=&quot;https://twitter.com/paulstringer&quot;&gt;Paul Stringer&#39;s&lt;/a&gt; course &lt;a href=&quot;https://skillsmatter.com/courses/545-paul-stringer-s-mastering-tdd-bdd-for-ios&quot;&gt;&quot;Mastering TDD/BDD in iOS&quot;&lt;/a&gt;. After the two days, I was exhausted... During the course, we looked at all the theory, completed some exercises. Paul gave us lots of links and books to read and, quite frankly, I was feeling overwhelmed.
I saw myself in front of the computer, with all those links to follow and read, and I didn&#39;t know what to do... So I laid back on my chair and closed my eyes and thought... What do I know about TDD?&lt;/p&gt;

</summary>
        
    </entry>
    
    <entry>
        <id>/2016/06/09/configuring-aws-for-lambda/</id>
        <title>Configuring Amazon Web Services (AWS) for using Lambda</title>
        <link href="http://codurance.com/2016/06/09/configuring-aws-for-lambda/"/>
        <published>2016-06-09T15:07:00+00:00</published>
        
        <summary type="html">&lt;p&gt;During the  &lt;a href=&quot;http://socratesuk.org/index.html&quot;&gt;Software Craftsmanship and Testing conference UK&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/mashooq&quot;&gt;Mash&lt;/a&gt; run a session on &lt;a href=&quot;https://aws.amazon.com/lambda/details/&quot;&gt;AWS Lambda&lt;/a&gt;, with examples written in Java and python. Some other people also tried to do it in NodeJS. This session is &lt;a href=&quot;/2016/05/11/aws-lambdas&quot;&gt;here&lt;/a&gt;&lt;/p&gt;

</summary>
        
    </entry>
    
    <entry>
        <id>/software-craftsmanship/2016/06/07/why-socrates-uk-is-not-just-a-conference-for-software-craftsmen/</id>
        <title>Why SoCraTes UK is not just a conference for Software Craftsmen.</title>
        <link href="http://codurance.com/software-craftsmanship/2016/06/07/why-socrates-uk-is-not-just-a-conference-for-software-craftsmen/"/>
        <published>2016-06-07T15:20:00+00:00</published>
        
        <summary type="html">&lt;p&gt;Last Friday, I attended the international &lt;a href=&quot;http://socratesuk.org/index.html&quot;&gt;Software Craftsmanship and Testing conference&lt;/a&gt; at the enchanting Wotton House, in Dorking. I was the only Designer among about 100 Developers.&lt;/p&gt;

</summary>
        
    </entry>
    
    <entry>
        <id>/2016/05/31/unit-vs-integration-akka-testing/</id>
        <title>Unit vs Integration Akka Testing</title>
        <link href="http://codurance.com/2016/05/31/unit-vs-integration-akka-testing/"/>
        <published>2016-05-31T00:20:00+00:00</published>
        
        <summary type="html">&lt;p&gt;This is the sixth post in the series about integrating sync clients with async systems (&lt;a href=&quot;http://codurance.com/2016/04/28/async-systems-with-sync-clients/&quot;&gt;1, &lt;/a&gt;&lt;a href=&quot;http://codurance.com/2016/04/30/akka-basics/&quot;&gt;2, &lt;/a&gt;&lt;a href=&quot;http://codurance.com/2016/05/10/finite-state-machines-with-akka/&quot;&gt;3, &lt;/a&gt;&lt;a href=&quot;http://codurance.com/2016/05/16/publish-subscribe-model-in-kafka/&quot;&gt;4, &lt;/a&gt;&lt;a href=&quot;http://codurance.com/2016/05/16/coordination-in-akka/&quot;&gt;5&lt;/a&gt;). Here we&#39;ll see how to test &lt;a href=&quot;http://doc.akka.io/docs/akka/current/scala/actors.html&quot;&gt;Akka actors&lt;/a&gt; with different testing styles.&lt;/p&gt;

</summary>
        
    </entry>
    
    <entry>
        <id>/2016/05/25/coordination-in-akka/</id>
        <title>Coordination in Akka</title>
        <link href="http://codurance.com/2016/05/25/coordination-in-akka/"/>
        <published>2016-05-25T00:20:00+00:00</published>
        
        <summary type="html">&lt;p&gt;This is the fifth post in the series about integrating sync clients with async systems (&lt;a href=&quot;http://codurance.com/2016/04/28/async-systems-with-sync-clients/&quot;&gt;1, &lt;/a&gt;&lt;a href=&quot;http://codurance.com/2016/04/30/akka-basics/&quot;&gt;2, &lt;/a&gt;&lt;a href=&quot;http://codurance.com/2016/05/10/finite-state-machines-with-akka/&quot;&gt;3, &lt;/a&gt;&lt;a href=&quot;http://codurance.com/2016/05/16/publish-subscribe-model-in-kafka/&quot;&gt;4&lt;/a&gt;). Here we&#39;ll see how to manage the actor&#39;s lifecycle, so our service can use the available resources efficiently.&lt;/p&gt;

</summary>
        
    </entry>
    
    <entry>
        <id>/2016/05/25/aws-api-gateway/</id>
        <title>AWS Lambda with API Gateway</title>
        <link href="http://codurance.com/2016/05/25/aws-api-gateway/"/>
        <published>2016-05-25T00:20:00+00:00</published>
        
        <summary type="html">&lt;p&gt;In a &lt;a href=&quot;/2016/05/11/aws-lambdas&quot;&gt;previous post&lt;/a&gt; I showed you how to create and deploy an AWS Lambda. We will continue that work and look at updating just the code for that lambda. We will also add a REST endpoint to the AWS Lambda using &lt;a href=&quot;https://aws.amazon.com/api-gateway&quot;&gt;AWS API Gateway&lt;/a&gt;.&lt;/p&gt;

</summary>
        
    </entry>
    
    <entry>
        <id>/2016/05/25/a-simple-TDD-environment-in-haskell/</id>
        <title>A simple TDD environment in Haskell</title>
        <link href="http://codurance.com/2016/05/25/a-simple-TDD-environment-in-haskell/"/>
        <published>2016-05-25T00:01:00+00:00</published>
        
        <summary type="html">&lt;p&gt;I recently implemented the &lt;a href=&quot;https://github.com/Gryff/bowling-kata&quot;&gt;bowling kata in Haskell&lt;/a&gt;. In the process, I found out how set up my environment to comfortably do Test Driven Development. Hopefully, others might find this post helpful to begin their journey with the language. I used the following components:&lt;/p&gt;

</summary>
        
    </entry>
    
    <entry>
        <id>/2016/05/16/publish-subscribe-model-in-kafka/</id>
        <title>Publish-subscribe model in Kafka</title>
        <link href="http://codurance.com/2016/05/16/publish-subscribe-model-in-kafka/"/>
        <published>2016-05-16T00:20:00+00:00</published>
        
        <summary type="html">&lt;p&gt;This is the fourth post in the series about integrating sync clients with async systems (&lt;a href=&quot;http://codurance.com/2016/04/28/async-systems-with-sync-clients/&quot;&gt;1, &lt;/a&gt;&lt;a href=&quot;http://codurance.com/2016/04/30/akka-basics/&quot;&gt;2, &lt;/a&gt;&lt;a href=&quot;http://codurance.com/2016/05/10/finite-state-machines-with-akka/&quot;&gt;3&lt;/a&gt;). Here we&#39;ll try to understand how &lt;a href=&quot;http://kafka.apache.org/&quot;&gt;Kafka&lt;/a&gt; works in order to correctly leverage its publish-subscribe implementation.&lt;/p&gt;

</summary>
        
    </entry>
    
    <entry>
        <id>/2016/05/16/bowling-kata-in-clojure-fsharp-scala/</id>
        <title>Bowling Kata in Clojure, F# and Scala</title>
        <link href="http://codurance.com/2016/05/16/bowling-kata-in-clojure-fsharp-scala/"/>
        <published>2016-05-16T00:01:00+00:00</published>
        
        <summary type="html">&lt;p&gt;In one of our evening apprenticeship meetings, a pair was doing the &lt;a href=&quot;http://codingdojo.org/cgi-bin/index.pl?KataBowling&quot;&gt;Bowling Kata&lt;/a&gt; in Java. After reviewing their code, I thought that it would be a good idea to do it myself.&lt;/p&gt;

</summary>
        
    </entry>
    
    <entry>
        <id>/practices/2016/05/14/retrospective-park/</id>
        <title>A Retrospective in the Park</title>
        <link href="http://codurance.com/practices/2016/05/14/retrospective-park/"/>
        <published>2016-05-14T00:20:00+00:00</published>
        
        <summary type="html">&lt;p&gt;The other day, I facilitated a sprint retrospective in the park. The sun was shining, and we had all been working hard to complete our backlog, so it felt like a nice reward for everyone’s efforts. Holding a retrospective outdoors can also give it an energy and sense of enthusiasm that is harder to find in a small room.&lt;/p&gt;

</summary>
        
    </entry>
    
    <entry>
        <id>/practices/2016/05/13/initiative-circles/</id>
        <title>Initiative Circles</title>
        <link href="http://codurance.com/practices/2016/05/13/initiative-circles/"/>
        <published>2016-05-13T00:20:00+00:00</published>
        
        <summary type="html">&lt;p&gt;We have been trying to encourage decentralised decision making at Codurance. To that effect, everyone within the company understands that they have the power to make any decision they need to make so long as they seek advise from the people that may be impacted. In order to help people make effective decisions, all company information is available to everyone in the company, including financials and salaries. This is all well and good, but in practice people do not simply go and start making informed strategic decisions just because they have the power to do so. For one, they are busy with their day jobs and simply do not have much time to look at the company holistically. Even if they have some wonderful ideas, they may not have the inclination or confidence to kick-off the initiative.&lt;/p&gt;

</summary>
        
    </entry>
    
    <entry>
        <id>/2016/05/11/aws-lambdas/</id>
        <title>AWS Lambda for Beginners</title>
        <link href="http://codurance.com/2016/05/11/aws-lambdas/"/>
        <published>2016-05-11T00:20:00+00:00</published>
        
        <summary type="html">&lt;p&gt;AWS Lambda is a compute service from Amazon. It makes deployment and provisioning very simple and fits very well with microservices based architecture. You can find out more about AWS Lambda &lt;a href=&quot;http://docs.aws.amazon.com/lambda/latest/dg/welcome.html&quot;&gt;here&lt;/a&gt;. Currently supported platforms are JVM, Node JS and Python.&lt;/p&gt;

</summary>
        
    </entry>
    
</feed>
